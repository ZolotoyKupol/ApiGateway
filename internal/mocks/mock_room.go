// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/repository/interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	models "apigateway/internal/models"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRoomProvider is a mock of RoomProvider interface.
type MockRoomProvider struct {
	ctrl     *gomock.Controller
	recorder *MockRoomProviderMockRecorder
}

// MockRoomProviderMockRecorder is the mock recorder for MockRoomProvider.
type MockRoomProviderMockRecorder struct {
	mock *MockRoomProvider
}

// NewMockRoomProvider creates a new mock instance.
func NewMockRoomProvider(ctrl *gomock.Controller) *MockRoomProvider {
	mock := &MockRoomProvider{ctrl: ctrl}
	mock.recorder = &MockRoomProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRoomProvider) EXPECT() *MockRoomProviderMockRecorder {
	return m.recorder
}

// CreateRoom mocks base method.
func (m *MockRoomProvider) CreateRoom(ctx context.Context, room models.RoomDB) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateRoom", ctx, room)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateRoom indicates an expected call of CreateRoom.
func (mr *MockRoomProviderMockRecorder) CreateRoom(ctx, room interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateRoom", reflect.TypeOf((*MockRoomProvider)(nil).CreateRoom), ctx, room)
}

// DeleteRoom mocks base method.
func (m *MockRoomProvider) DeleteRoom(ctx context.Context, id int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteRoom", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteRoom indicates an expected call of DeleteRoom.
func (mr *MockRoomProviderMockRecorder) DeleteRoom(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteRoom", reflect.TypeOf((*MockRoomProvider)(nil).DeleteRoom), ctx, id)
}

// GetAllRooms mocks base method.
func (m *MockRoomProvider) GetAllRooms(ctx context.Context) ([]models.RoomDB, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllRooms", ctx)
	ret0, _ := ret[0].([]models.RoomDB)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllRooms indicates an expected call of GetAllRooms.
func (mr *MockRoomProviderMockRecorder) GetAllRooms(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllRooms", reflect.TypeOf((*MockRoomProvider)(nil).GetAllRooms), ctx)
}

// GetRoomByID mocks base method.
func (m *MockRoomProvider) GetRoomByID(ctx context.Context, id int) (*models.RoomDB, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRoomByID", ctx, id)
	ret0, _ := ret[0].(*models.RoomDB)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRoomByID indicates an expected call of GetRoomByID.
func (mr *MockRoomProviderMockRecorder) GetRoomByID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRoomByID", reflect.TypeOf((*MockRoomProvider)(nil).GetRoomByID), ctx, id)
}

// UpdateRoom mocks base method.
func (m *MockRoomProvider) UpdateRoom(ctx context.Context, id int, room models.RoomDB) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateRoom", ctx, id, room)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateRoom indicates an expected call of UpdateRoom.
func (mr *MockRoomProviderMockRecorder) UpdateRoom(ctx, id, room interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateRoom", reflect.TypeOf((*MockRoomProvider)(nil).UpdateRoom), ctx, id, room)
}
